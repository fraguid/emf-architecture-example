import it.rcpvision.ecf2017.example.model.carsharing.CarsharingPackage
import it.rcpvision.ecf2017.example.model.carsharing.User
import it.rcpvision.ecf2017.example.model.carsharing.Vehicle
import it.rcpvision.ecf2017.example.ui.custom.ArrayTableViewerContentProvider
import it.rcpvision.ecf2017.example.ui.custom.DirtyRowsTableLabelProvider
import it.rcpvision.ecf2017.example.ui.custom.ListUndoableEditingStrategy
import it.rcpvision.ecf2017.example.ui.custom.ReservationProposalCreator
import it.rcpvision.ecf2017.example.ui.presenter.IVehiclePresenter
import it.rcpvision.ecf2017.example.ui.presenter.impl.VehiclePresenterImpl
import it.rcpvision.ecf2017.example.ui.view.VehicleTableFormView
import org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain
import org.eclipse.emf.parsley.composite.ProposalCreator
import org.eclipse.emf.parsley.edit.IEditingStrategy
import org.eclipse.emf.parsley.edit.domain.GlobalAdapterFactoryEditingDomainProvider
import org.eclipse.emf.parsley.edit.ui.provider.TableViewerContentProvider
import org.eclipse.emf.parsley.ui.provider.TableColumnLabelProvider
import org.eclipse.emf.parsley.views.SaveableTableFormView

module it.rcpvision.ecf2017.example.ui.vehicle {
	
	parts{
		viewpart it.rcpvision.ecf2017.example.ui.view.vehicle {
			viewname "Vehicle View"
			viewclass VehicleTableFormView
		}
	}
	
	configurator{
		eClass {
			SaveableTableFormView -> CarsharingPackage.Literals.VEHICLE
		}
	}
	
	labelProvider{
		text{
			User -> name +" "+surname
			Vehicle -> brand + " "+model +" ("+plate+")"
		}
	}
	

	bindings{
		type IVehiclePresenter -> VehiclePresenterImpl
		type IEditingStrategy -> ListUndoableEditingStrategy
		type TableColumnLabelProvider -> DirtyRowsTableLabelProvider
		type TableViewerContentProvider -> ArrayTableViewerContentProvider
		provide AdapterFactoryEditingDomain -> GlobalAdapterFactoryEditingDomainProvider
		type ProposalCreator -> ReservationProposalCreator
	}
	
	tableFeaturesProvider{
		features{
			Vehicle -> id, brand, model, ^type, plate ,reservationState
		}
	}
	
	featuresProvider{
		features{
			Vehicle -> brand, model, ^type, plate
		}
	}
	
}
